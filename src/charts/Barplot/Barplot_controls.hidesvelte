<script>
  // @ts-nocheck

  import Slider from "../../utils/Slider.svelte";
  import { data, graphs, graphTabs, activeGraphTab } from "../../store";
  import InPlaceEdit from "../../utils/InPlaceEdit.svelte";
  import {
    getFieldNames,
    removeGraphData,
    createnewDataForGraph,
  } from "../../data/handleData";
  import { getRandomHexColour } from "../AllCharts.js";
  import {
    defaultchartvalues,
    defaultother,
  } from "./Barplot_defaults.hidesvelte";
</script>

{#if $activeGraphTab >= 0 && $graphs[$activeGraphTab].graph === "Barplot"}
  <div class="chartControls">
    <div class="sliderContainer">
      <Slider
        min={100}
        max={1000}
        limits={[5, Infinity]}
        label="Width:"
        bind:value={$graphs[$activeGraphTab].params.width}
      />
    </div>

    <div class="sliderContainer">
      <Slider
        min={10}
        max={3000}
        limits={[5, Infinity]}
        label="Height: "
        bind:value={$graphs[$activeGraphTab].params.height}
      />
    </div>

    <div class="sliderContainer">
      <Slider
        min={0}
        max={1}
        limits={[0, 1]}
        step="0.01"
        label="Spacing: "
        bind:value={$graphs[$activeGraphTab].params.barspace}
      />
    </div>
  </div>

  <!-- ------------------- -->
  <!-- The Data -->
  <!-- ------------------- -->
  <div style="margin: 1em 1em 0 0;">
    <h1 style="display: inline;">{$graphTabs[$activeGraphTab].name} Data</h1>

    <!-- svelte-ignore a11y-no-static-element-interactions -->
    <!-- svelte-ignore a11y-click-events-have-key-events -->
    <!-- svelte-ignore a11y-no-static-element-interactions -->
    <span
      class="addbutton hoverbutton showContextMenu"
      on:click={(e) => {
        e.preventDefault();
        createnewDataForGraph(defaultchartvalues, defaultother);
      }}>+</span
    >
  </div>
  <!-- -->
  <div class="graphDataTree">
    {#each $graphs[$activeGraphTab].sourceData as source, sourceIndex}
      <details open class="dataTable">
        <summary
          ><InPlaceEdit bind:value={source.name} />

          <!-- svelte-ignore a11y-no-static-element-interactions -->
          <!-- svelte-ignore a11y-no-static-element-interactions -->
          <!-- svelte-ignore a11y-click-events-have-key-events -->
          <div
            class="deleteTable hoverbutton"
            on:click={(e) => {
              e.preventDefault();
              removeGraphData(sourceIndex);
            }}
          >
            üóëÔ∏è
          </div>
        </summary>

        <div class="tableLabel">
          Table: {$data.find((entry) => entry.id === source.tableID)
            .displayName}
        </div>

        {#each Object.keys(source.chartvalues) as key}
          <details open class="field no-arrow">
            <summary
              >{key}:
              <!-- svelte-ignore a11y-no-static-element-interactions -->
              <!-- svelte-ignore a11y-click-events-have-key-events -->

              <span
                ><select
                  class="selectField"
                  bind:value={source.chartvalues[key].field}
                >
                  {#each getFieldNames(source) as fields}
                    <option value={fields}
                      >{$data[$data.findIndex((d) => d.id === source.tableID)]
                        .data[fields].name}</option
                    >
                  {/each}
                </select></span
              >
            </summary>
          </details>
        {/each}

        {#each $graphs[$activeGraphTab]?.chartData?.data as cdata, ci}
          {#each cdata.categories as cat}
            <div class="colour">
              {cat}
              <input
                class="colourPicker"
                id={cat}
                type="color"
                style="background: #232425"
                value="#232425"
              />
              <div class="sliderContainer">
                <Slider
                  min="0"
                  max="1"
                  step="0.01"
                  limits={[0, 1]}
                  label="Alpha: "
                  value="0.5"
                />
              </div>
            </div>
          {/each}
        {/each}
      </details>
      <!-- The end of the data-->
    {/each}
  </div>
{/if}
